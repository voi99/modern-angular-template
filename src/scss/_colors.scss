@use "@angular/material" as mat;

@mixin theme-colors($theme) {
  --color-primary: #{mat.get-theme-color($theme, primary)};
  --color-on-primary: #{mat.get-theme-color($theme, on-primary)};
  --color-primary-container: #{mat.get-theme-color($theme, primary-container)};
  --color-on-primary-container: #{mat.get-theme-color($theme, on-primary-container)};
  --color-primary-fixed: #{mat.get-theme-color($theme, primary-fixed)};
  --color-primary-fixed-dim: #{mat.get-theme-color($theme, primary-fixed-dim)};
  --color-on-primary-fixed: #{mat.get-theme-color($theme, on-primary-fixed)};
  --color-on-primary-fixed-variant: #{mat.get-theme-color($theme, on-primary-fixed-variant)};

  --color-secondary: #{mat.get-theme-color($theme, secondary)};
  --color-on-secondary: #{mat.get-theme-color($theme, on-secondary)};
  --color-secondary-container: #{mat.get-theme-color($theme, secondary-container)};
  --color-on-secondary-container: #{mat.get-theme-color($theme, on-secondary-container)};
  --color-secondary-fixed: #{mat.get-theme-color($theme, secondary-fixed)};
  --color-secondary-fixed-dim: #{mat.get-theme-color($theme, secondary-fixed-dim)};
  --color-on-secondary-fixed: #{mat.get-theme-color($theme, on-secondary-fixed)};
  --color-on-secondary-fixed-variant: #{mat.get-theme-color($theme, on-secondary-fixed-variant)};

  --color-tertiary: #{mat.get-theme-color($theme, tertiary)};
  --color-on-tertiary: #{mat.get-theme-color($theme, on-tertiary)};
  --color-tertiary-container: #{mat.get-theme-color($theme, tertiary-container)};
  --color-on-tertiary-container: #{mat.get-theme-color($theme, on-tertiary-container)};
  --color-tertiary-fixed: #{mat.get-theme-color($theme, tertiary-fixed)};
  --color-tertiary-fixed-dim: #{mat.get-theme-color($theme, tertiary-fixed-dim)};
  --color-on-tertiary-fixed: #{mat.get-theme-color($theme, on-tertiary-fixed)};
  --color-on-tertiary-fixed-variant: #{mat.get-theme-color($theme, on-tertiary-fixed-variant)};

  --color-error: #{mat.get-theme-color($theme, error)};
  --color-on-error: #{mat.get-theme-color($theme, on-error)};
  --color-error-container: #{mat.get-theme-color($theme, error-container)};
  --color-on-error-container: #{mat.get-theme-color($theme, on-error-container)};

  --color-surface: #{mat.get-theme-color($theme, surface)};
  --color-surface-dim: #{mat.get-theme-color($theme, surface-dim)};
  --color-surface-bright: #{mat.get-theme-color($theme, surface-bright)};
  --color-surface-container-lowest: #{mat.get-theme-color($theme, surface-container-lowest)};
  --color-surface-container-low: #{mat.get-theme-color($theme, surface-container-low)};
  --color-surface-container: #{mat.get-theme-color($theme, surface-container)};
  --color-surface-container-high: #{mat.get-theme-color($theme, surface-container-high)};
  --color-surface-container-highest: #{mat.get-theme-color($theme, surface-container-highest)};
  --color-on-surface: #{mat.get-theme-color($theme, on-surface)};
  --color-on-surface-variant: #{mat.get-theme-color($theme, on-surface-variant)};

  --color-outline: #{mat.get-theme-color($theme, outline)};
  --color-outline-variant: #{mat.get-theme-color($theme, outline-variant)};

  --color-inverse-surface: #{mat.get-theme-color($theme, inverse-surface)};
  --color-inverse-on-surface: #{mat.get-theme-color($theme, inverse-on-surface)};
  --color-inverse-primary: #{mat.get-theme-color($theme, inverse-primary)};

  --color-scrim: #{mat.get-theme-color($theme, scrim)};
  --color-shadow: #{mat.get-theme-color($theme, shadow)};
}
